name: nightly

on:
  schedule:
    - cron: '0 15 * * *'

jobs:
  build:
    if: github.repository == 'OS-Q/P52'
    strategy:
      fail-fast: false
      matrix:
        examples:
          - "arduino-blink"
          - "arduino-wifiscan"
          - "simba-blink"
          - "pumbaa-blink"
        package:
          - "release"
          - "latest"
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.7,3.9]


    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}

      - name: Install release
        if: matrix.package == 'release'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/archive/master.zip
          pio platform install https://github.com/OS-Q/P52/releases/latest/download/P52.zip

      - name: Install latest
        if: matrix.package == 'latest'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/archive/master.zip
          qio platform install file://.

      - name: Build
        id: build
        if: success() && github.repository == 'OS-Q/P52'
        run: |
          pio run -d examples/${{ matrix.examples }}
          echo "::set-output name=status::success"

  platformio:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7,3.9]
        example:
          - "examples/arduino-blink"
          - "examples/arduino-briki-internal-libs"
          - "examples/arduino-wifiscan"
          - "examples/espidf-arduino-blink"
          - "examples/espidf-arduino-wifiscan"
          - "examples/espidf-aws-iot"
          - "examples/espidf-ble-eddystone"
          - "examples/espidf-coap-server"
          - "examples/espidf-exceptions"
          - "examples/espidf-hello-world"
          - "examples/espidf-http-request"
          - "examples/espidf-peripherals-uart"
          - "examples/espidf-peripherals-usb"
          - "examples/espidf-storage-sdcard"
          - "examples/espidf-storage-spiffs"
          - "examples/espidf-ulp-adc"
          - "examples/espidf-ulp-pulse"
          - "examples/pumbaa-blink"
          - "examples/simba-blink"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: platformio/platform-espressif32
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: espressif32

      - name: Install dependencies
        if: github.repository == 'OS-Q/P52'
        working-directory: espressif32
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip

      - name: Build examples
        working-directory: espressif32
        run: |
          pio run -d ${{ matrix.example }}
